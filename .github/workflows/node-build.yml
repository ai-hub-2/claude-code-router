name: Node.js Build & Deploy

on:
  push:
    branches: [ main, master ]
    paths:
      - '.github/workflows/**'
      - 'src/**'
      - 'package.json'
      - 'tsconfig.json'
      - 'scripts/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - '.github/workflows/**'
      - 'src/**'
      - 'package.json'
      - 'tsconfig.json'
      - 'scripts/**'
  workflow_dispatch:
    inputs:
      build-type:
        description: "Build Type"
        required: true
        default: "production"
        type: choice
        options: [production, development]

permissions:
  contents: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      BUILD_TYPE: ${{ inputs.build-type || 'production' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Show Project Info
        run: |
          echo "üîç Analyzing Node.js project..."
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Build Type: ${{ env.BUILD_TYPE }}"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Show Package Info
        run: |
          if [ -f "package.json" ]; then
            echo "üì¶ Package.json found"
            PROJECT_NAME=$(node -p "require('./package.json').name")
            PROJECT_VERSION=$(node -p "require('./package.json').version")
            PROJECT_DESCRIPTION=$(node -p "require('./package.json').description")
            echo "Project Name: $PROJECT_NAME"
            echo "Version: $PROJECT_VERSION"
            echo "Description: $PROJECT_DESCRIPTION"
          else
            echo "‚ùå No package.json found"
            exit 1
          fi

      - name: Install Dependencies
        run: |
          echo "üì¶ Installing dependencies..."
          if [ -f "pnpm-lock.yaml" ]; then
            echo "Using pnpm..."
            npm install -g pnpm
            pnpm install
          else
            echo "Using npm..."
            npm ci
          fi
          echo "‚úÖ Dependencies installed"

      - name: Build Project
        run: |
          echo "üèóÔ∏è Building project..."
          echo "Running: node scripts/build.js"
          npm run build
          echo "‚úÖ Build completed"

      - name: Test Build Output
        run: |
          echo "üß™ Testing build output..."
          if [ -f "dist/cli.js" ]; then
            echo "‚úÖ CLI file found: dist/cli.js"
            echo "File size: $(du -h dist/cli.js | cut -f1)"
            echo "Testing CLI help..."
            node dist/cli.js --help || echo "CLI help test completed"
          else
            echo "‚ùå CLI file not found in dist/cli.js"
          fi

      - name: Show Build Output
        run: |
          echo "üìÅ Build output:"
          if [ -d "dist" ]; then
            ls -la dist/
            echo "Dist folder size: $(du -sh dist/ | cut -f1)"
          elif [ -d "build" ]; then
            ls -la build/
            echo "Build folder size: $(du -sh build/ | cut -f1)"
          else
            echo "No build output directory found"
          fi

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ env.BUILD_TYPE }}-build
          path: |
            dist/
            build/
            node_modules/
          retention-days: 7

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**
            build/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Success Summary
        run: |
          echo "üéâ Node.js build completed successfully!"
          echo "Project: ${{ github.event.repository.name }}"
          echo "Build Type: ${{ env.BUILD_TYPE }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "‚úÖ Build artifacts are ready for download!"