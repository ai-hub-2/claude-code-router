name: Detailed Android Build with Full Logs

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK Components
        run: |
          sdkmanager "platform-tools"
          sdkmanager "platforms;android-34"
          sdkmanager "build-tools;34.0.0"

      - name: Setup Gradle Wrapper
        run: |
          chmod +x gradlew
          ./gradlew --version

      - name: Show Environment Details
        run: |
          echo "=== ENVIRONMENT DETAILS ==="
          echo "JAVA_HOME: $JAVA_HOME"
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          echo "GRADLE_HOME: $GRADLE_HOME"
          echo "PATH: $PATH"
          echo ""
          echo "=== JAVA VERSION ==="
          java -version
          echo ""
          echo "=== GRADLE VERSION ==="
          ./gradlew --version

      - name: Show Project Structure
        run: |
          echo "=== PROJECT STRUCTURE ==="
          find . -type f -name "*.gradle" -o -name "*.properties" -o -name "*.xml" -o -name "*.kt" -o -name "*.java" | head -30
          echo ""
          echo "=== ROOT DIRECTORY ==="
          ls -la
          echo ""
          echo "=== APP DIRECTORY ==="
          ls -la app/ || echo "No app directory found"

      - name: Show Gradle Files Content
        run: |
          echo "=== SETTINGS.GRADLE ==="
          cat settings.gradle
          echo ""
          echo "=== BUILD.GRADLE (ROOT) ==="
          cat build.gradle
          echo ""
          echo "=== APP/BUILD.GRADLE ==="
          cat app/build.gradle
          echo ""
          echo "=== GRADLE.PROPERTIES ==="
          cat gradle.properties

      - name: Test Gradle Projects with Details
        run: |
          echo "=== TESTING GRADLE PROJECTS WITH DETAILS ==="
          ./gradlew projects --info --stacktrace

      - name: Test Gradle Dependencies with Details
        run: |
          echo "=== TESTING GRADLE DEPENDENCIES WITH DETAILS ==="
          ./gradlew dependencies --info --stacktrace

      - name: Test Gradle Clean with Details
        run: |
          echo "=== TESTING GRADLE CLEAN WITH DETAILS ==="
          ./gradlew clean --info --stacktrace

      - name: Test Gradle Compile with Details
        run: |
          echo "=== TESTING GRADLE COMPILE WITH DETAILS ==="
          ./gradlew compileReleaseJavaWithJavac --info --stacktrace

      - name: Test Gradle Kotlin Compile with Details
        run: |
          echo "=== TESTING GRADLE KOTLIN COMPILE WITH DETAILS ==="
          ./gradlew compileReleaseKotlin --info --stacktrace

      - name: Test Gradle Process Resources with Details
        run: |
          echo "=== TESTING GRADLE PROCESS RESOURCES WITH DETAILS ==="
          ./gradlew processReleaseResources --info --stacktrace

      - name: Test Gradle Package with Details
        run: |
          echo "=== TESTING GRADLE PACKAGE WITH DETAILS ==="
          ./gradlew packageRelease --info --stacktrace

      - name: Build APK with Full Logs
        run: |
          echo "=== BUILDING APK WITH FULL LOGS ==="
          ./gradlew assembleRelease --no-daemon --stacktrace --info --debug
          echo "=== BUILD COMPLETED ==="

      - name: Check Build Result
        run: |
          echo "=== CHECKING BUILD RESULT ==="
          if [ -f "app/build/outputs/apk/release/app-release.apk" ]; then
            echo "✅ SUCCESS: APK created successfully!"
            ls -la app/build/outputs/apk/release/
            echo "APK size: $(du -h app/build/outputs/apk/release/app-release.apk | cut -f1)"
          else
            echo "❌ FAILURE: APK not found"
            echo "Searching for any APK files..."
            find . -name "*.apk" -type f
            echo "Checking build directory..."
            ls -la app/build/ || echo "No build directory found"
          fi

      - name: Upload APK if Success
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: app/build/outputs/apk/release/app-release.apk