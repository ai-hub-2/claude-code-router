name: Fixed Android Build

on:
  push:
    branches: [ main, master ]
    paths:
      - 'android_app/**'
      - '.github/workflows/fixed-android-build.yml'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Show Environment
        run: |
          echo "=== ENVIRONMENT INFO ==="
          echo "Java version:"
          java -version
          echo ""
          echo "Android SDK: $ANDROID_SDK_ROOT"
          echo "Working directory: $(pwd)"
          echo ""
          echo "Android project structure:"
          ls -la android_app/
          echo ""
          echo "Gradle files:"
          find android_app -name "*.gradle" -type f

      - name: Install Gradle
        run: |
          echo "=== INSTALLING GRADLE ==="
          sudo apt-get update
          sudo apt-get install -y gradle
          echo "Gradle version:"
          gradle --version

      - name: Test Gradle Wrapper
        run: |
          echo "=== TESTING GRADLE WRAPPER ==="
          cd android_app
          echo "Making gradlew executable..."
          chmod +x gradlew
          echo "Testing gradlew version..."
          ./gradlew --version
          echo "Testing gradlew tasks..."
          ./gradlew tasks --all

      - name: Build APK
        run: |
          echo "=== BUILDING APK ==="
          cd android_app
          echo "Starting build process..."
          echo "Using gradlew assembleDebug..."
          ./gradlew assembleDebug --stacktrace --info
          echo "Build completed!"

      - name: Find APK
        id: find-apk
        run: |
          echo "=== FINDING APK ==="
          cd android_app
          
          echo "Searching for APK files..."
          APK_FILES=$(find . -name "*.apk" -type f)
          
          if [ -z "$APK_FILES" ]; then
            echo "❌ No APK files found!"
            echo "Build directories:"
            find . -name "build" -type d
            echo "Contents of app/build:"
            if [ -d "app/build" ]; then
              ls -la app/build/
              if [ -d "app/build/outputs" ]; then
                ls -la app/build/outputs/
              fi
            fi
            exit 1
          fi
          
          echo "✅ Found APK files:"
          echo "$APK_FILES"
          
          # Get the first APK file
          APK_PATH=$(echo "$APK_FILES" | head -n 1)
          echo "Selected APK: $APK_PATH"
          
          # Get file size
          APK_SIZE=$(du -h "$APK_PATH" | cut -f1)
          echo "APK Size: $APK_SIZE"
          
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: MyAndroidApp-Debug.apk
          path: android_app/${{ steps.find-apk.outputs.apk_path }}
          retention-days: 30

      - name: Success Message
        run: |
          echo "🎉 Android APK build completed successfully!"
          echo "APK Path: ${{ steps.find-apk.outputs.apk_path }}"
          echo "✅ APK is ready for download!"