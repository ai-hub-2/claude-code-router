name: Build Claude Code Router APK (No Cache - Reliable)

on:
  push:
    branches: [ main, master ]
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      build-type:
        description: "نوع البناء"
        required: true
        default: "release"
        type: choice
        options: [release, debug]

permissions:
  contents: write

jobs:
  build-apk:
    runs-on: ubuntu-latest
    env:
      BUILD_TYPE: ${{ inputs.build-type || 'release' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # ---- Java 17 ----
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # ---- Install Gradle via apt (no cache) ----
      - name: Install Gradle
        run: |
          sudo apt-get update
          sudo apt-get install -y gradle
          gradle --version

      # ---- Android SDK ----
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # ---- Clear all cache directories ----
      - name: Clear All Cache
        run: |
          echo "🧹 مسح جميع أنواع الكاش..."
          rm -rf ~/.gradle
          rm -rf ~/.android
          rm -rf .gradle
          rm -rf build
          rm -rf app/build
          echo "✅ تم مسح جميع الكاش"

      # ---- Install SDK Components ----
      - name: Install SDK Components
        run: sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      # ---- Create gradle.properties to disable cache ----
      - name: Disable Gradle Cache
        run: |
          echo "org.gradle.caching=false" > gradle.properties
          echo "org.gradle.parallel=false" >> gradle.properties
          echo "org.gradle.configureondemand=false" >> gradle.properties
          echo "org.gradle.daemon=false" >> gradle.properties
          echo "✅ تم تعطيل جميع أنواع الكاش في Gradle"

      # ---- Build APK using system gradle ----
      - name: Build APK
        run: |
          echo "🏗️ بدء بناء APK..."
          if [ "${{ env.BUILD_TYPE }}" = "release" ]; then
            gradle assembleRelease --no-daemon --no-build-cache --no-configuration-cache
          else
            gradle assembleDebug --no-daemon --no-build-cache --no-configuration-cache
          fi
          echo "✅ تم بناء APK بنجاح"

      # ---- Locate APK ----
      - name: Locate APK
        id: apk
        run: |
          echo "🔍 البحث عن APK..."
          APK_PATH=$(find app/build/outputs/apk/${{ env.BUILD_TYPE }} -name "*.apk" | head -n 1)
          if [ -z "$APK_PATH" ]; then
            echo "❌ لم يتم العثور على APK"
            echo "📁 محتويات مجلد app/build/outputs/apk/:"
            ls -la app/build/outputs/apk/ || echo "المجلد غير موجود"
            exit 1
          fi
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
          echo "✅ تم العثور على APK: $APK_PATH"
          echo "📊 حجم APK: $(du -h "$APK_PATH" | cut -f1)"

      # ---- Upload Artifact ----
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: claude-code-router-${{ env.BUILD_TYPE }}.apk
          path: ${{ steps.apk.outputs.apk_path }}

      # ---- Create GitHub Release ----
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.apk.outputs.apk_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}